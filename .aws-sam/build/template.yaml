AWSTemplateFormatVersion: 2010-09-09
Transform: 'AWS::Serverless-2016-10-31'
Description: |
  trello-clone-be-ts Sample SAM Template for trello-clone-be-ts
Globals:
  Function:
    Timeout: 3
Parameters:
  DBUsername:
    NoEcho: 'true'
    Description: Username for MySQL database access
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.
  DBPassword:
    NoEcho: 'true'
    Description: Password MySQL database access
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
Resources:
  RDSCluster:
    Type: 'AWS::RDS::DBCluster'
    Properties:
      MasterUsername: !<!Ref> DBUsername
      MasterUserPassword: !<!Ref> DBPassword
      EnableHttpEndpoint: true
      Engine: aurora-mysql
      EngineMode: serverless
  RDSDBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: aurora-mysql
      Engine: aurora-mysql
      DBClusterIdentifier: !<!Ref> RDSCluster
      PubliclyAccessible: 'true'
      DBInstanceClass: db.t2.small
  BoardHttpApi:
    Type: 'AWS::Serverless::HttpApi'
    Properties:
      StageName: v1
      CorsConfiguration: true
  CreateCardFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: CreateCardFunction
      Handler: app.lambdaHandler
      Runtime: nodejs12.x
      Timeout: 15
      Events:
        HelloWorld:
          Type: HttpApi
          Properties:
            ApiId: !<!Ref> BoardHttpApi
            Path: /cards
            Method: post
Outputs:
  TrelloApi:
    Description: Output of the API Endpoint
    Value: !<!Sub> 'https://${BoardHttpApi}.execute-api.${AWS::Region}.amazonaws.com/v1/'
  AuroraAPI:
    Description: Output of the API Endpoint
    Value: !<!Sub> >-
      https://${RDSDBInstance}.${RDSDBInstance.arn}.${AWS::Region}.rds.amazonaws.com
